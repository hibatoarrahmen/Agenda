package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgendaDeptAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaDeptAllPropertiesEquals(AgendaDept expected, AgendaDept actual) {
        assertAgendaDeptAutoGeneratedPropertiesEquals(expected, actual);
        assertAgendaDeptAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaDeptAllUpdatablePropertiesEquals(AgendaDept expected, AgendaDept actual) {
        assertAgendaDeptUpdatableFieldsEquals(expected, actual);
        assertAgendaDeptUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaDeptAutoGeneratedPropertiesEquals(AgendaDept expected, AgendaDept actual) {
        assertThat(expected)
            .as("Verify AgendaDept auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaDeptUpdatableFieldsEquals(AgendaDept expected, AgendaDept actual) {
        assertThat(expected)
            .as("Verify AgendaDept relevant properties")
            .satisfies(e -> assertThat(e.getNumAgenda()).as("check numAgenda").isEqualTo(actual.getNumAgenda()))
            .satisfies(e -> assertThat(e.getDateMAJ()).as("check dateMAJ").isEqualTo(actual.getDateMAJ()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendaDeptUpdatableRelationshipsEquals(AgendaDept expected, AgendaDept actual) {
        assertThat(expected)
            .as("Verify AgendaDept relationships")
            .satisfies(e -> assertThat(e.getActiviteDept()).as("check activiteDept").isEqualTo(actual.getActiviteDept()));
    }
}
